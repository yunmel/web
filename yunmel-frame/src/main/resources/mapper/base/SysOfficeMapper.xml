<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunmel.frame.sys.mapper.SysOfficeMapper">

	<sql id="sysOfficeColumns">
		id,address,area_id,code,create_by,create_date,del_flag,email,fax,grade,master,
		name,parent_id,parent_ids,phone,remarks,type,update_by,update_date,zip_code,icon
	</sql>
	
	<sql id="sysOfficeAliasColumns">
		t1.id,t1.address,t1.area_id,t1.code,t1.create_by,t1.create_date,t1.del_flag,t1.email,t1.fax,t1.grade,t1.master,
		t1.name,t1.parent_id,t1.parent_ids,t1.phone,t1.remarks,t1.type,t1.update_by,t1.update_date,t1.zip_code,
		t1.icon
	</sql>
	
	<!-- 修改父节点字符串 -->
	<update id="updateParentIds">
		update sys_office
		set parent_ids = REPLACE(parent_ids, #{oldParentIds}, #{parentIds}) 
		where parent_ids like CONCAT( '%,' , #{id} , ',%' )  
	</update>
	
	<!-- 根据节点Id删除底下全部子节点包括孙子节点 -->
	<update id="deleteOfficeByRootId">
		update sys_office set del_flag=1 where FIND_IN_SET(#{id},parent_ids) or id = #{id}
	</update>
	
	<!-- 根据根节点查询自身及其子孙节点 -->
	<select id="findOfficeIdsByRootId" resultType="java.lang.Long">
		SELECT id FROM sys_office WHERE FIND_IN_SET(#{rootId},parent_ids) OR id = #{rootId}
	</select>
	
	<!-- 根据用户的id的到跨机构数据范围 -->
	<select id="findUserDataScopeByUserId" resultType="java.lang.Long">
		SELECT DISTINCT so.id FROM sys_office so 
		LEFT JOIN sys_role_office sro ON so.id = sro.office_id
		LEFT JOIN sys_user_role sur ON sur.role_id = sro.role_id
		WHERE sur.user_id = #{userId}
	</select>
	
	<!-- 根据部门id查找公司id -->
	<select id="findOfficeCompanyIdByDepId" resultType="com.yunmel.frame.sys.model.SysOffice">
		SELECT <include refid="sysOfficeColumns"/> FROM sys_office
		WHERE FIND_IN_SET(id,(SELECT parent_ids FROM sys_office WHERE id = #{depId}))
		AND type = 1 and del_flag=0
		ORDER BY grade
		LIMIT 1
	</select>
	
	<!-- 分页显示筛选查询 -->
	<!-- <select id="findPageInfo" resultType="com.yunmel.frame.sys.model.SysOffice">
		select <include refid="sysOfficeAliasColumns"/>,t2.name pname,t2.id pid
		from sys_office t1
		left join sys_office t2
		ON t1.parent_id=t2.id
		<where>
			<if test="name != ''">
				t1.name like concat( '%' , #{name} , '%' )
			</if>
			<if test="null != id and '' != id and id != 0 and null != name and '' != name"> 
				(FIND_IN_SET(#{id},t1.parent_ids) or t1.id = #{id})
			</if>
			<if test="null != userDataScope and '' != userDataScope">
				and ${userDataScope}
			</if>
			and t1.del_flag=0
		</where>
		ORDER BY t1.update_date desc
	</select> -->

	<select id="findPageInfo" resultType="com.yunmel.frame.sys.model.SysOffice">
		select  <include refid="sysOfficeAliasColumns" /> ,t.name as tname 
			from sys_office  t1 
			left join sys_unit_type t on t.id = t1.type 
		<where>
			1= 1 and t1.del_flag = 0 
			<if test="parentId != null and parentId !='' ">
			    and t1.PARENT_ID =  #{parentId}
			</if>
			<if test="parentIds != null and parentIds !='' ">
			    and t1.PARENT_IDS like CONCAT( '%' , #{parentIds}, '%') 
			</if>
			<if test="areaId != null and areaId !='' ">
			    and t1.AREA_ID =  #{areaId}
			</if>
			<if test="code != null and code !='' ">
			    and t1.CODE like CONCAT( '%' , #{code}, '%') 
			</if>
			<if test="name != null and name !='' ">
			    and t1.NAME like CONCAT( '%' , #{name}, '%') 
			</if>
			<if test="type != null and type !='' ">
			    and t1.TYPE =  #{type}
			</if>
			<if test="grade != null and grade !='' ">
			    and t1.GRADE like CONCAT( '%' , #{grade}, '%') 
			</if>
			<if test="address != null and address !='' ">
			    and t1.ADDRESS like CONCAT( '%' , #{address}, '%') 
			</if>
			<if test="zipCode != null and zipCode !='' ">
			    and t1.ZIP_CODE like CONCAT( '%' , #{zipCode}, '%') 
			</if>
			<if test="master != null and master !='' ">
			    and t1.MASTER like CONCAT( '%' , #{master}, '%') 
			</if>
			<if test="phone != null and phone !='' ">
			    and t1.PHONE like CONCAT( '%' , #{phone}, '%') 
			</if>
			<if test="fax != null and fax !='' ">
			    and t1.FAX like CONCAT( '%' , #{fax}, '%') 
			</if>
			<if test="email != null and email !='' ">
			    and t1.EMAIL like CONCAT( '%' , #{email}, '%') 
			</if>
			<if test="createBy != null and createBy !='' ">
			    and t1.CREATE_BY like CONCAT( '%' , #{createBy}, '%') 
			</if>
			<if test="updateBy != null and updateBy !='' ">
			    and t1.UPDATE_BY like CONCAT( '%' , #{updateBy}, '%') 
			</if>
			<if test="remarks != null and remarks !='' ">
			    and t1.REMARKS like CONCAT( '%' , #{remarks}, '%') 
			</if>
			<if test="icon != null and icon !='' ">
			    and t1.ICON like CONCAT( '%' , #{icon}, '%') 
			</if>
			<if test="createDateStart != null and createDateStart !='' ">
			    and t1.CREATE_DATE &gt;=  #{createDateStart}
			</if>
			<if test="createDateEnd != null and createDateEnd !='' ">
			    and t1.CREATE_DATE &lt;=  #{createDateEnd}
			</if>
			<if test="updateDateStart != null and updateDateStart !='' ">
			    and t1.UPDATE_DATE &gt;=  #{updateDateStart}
			</if>
			<if test="updateDateEnd != null and updateDateEnd !='' ">
			    and t1.UPDATE_DATE &lt;=  #{updateDateEnd}
			</if>
			<if test="null != userDataScope and '' != userDataScope">
				and ${userDataScope}
			</if>
		</where>
		<if test="sort != null and sort != ''"> 
			ORDER BY t1.${sort}   ${order}
		</if>
	</select>
	

	<select id="findAllOffice" resultType="com.yunmel.frame.sys.model.SysOffice">
		SELECT * from sys_office so where so.del_flag = 0
	</select>
	
	<select id="findOfficeByParentId" resultType="com.yunmel.frame.sys.model.SysOffice">
		SELECT * from sys_office so where so.id = ${parentId}
	</select>
	
	<!-- <select id="findOfficeHaveCount" resultType="com.yunmel.frame.sys.model.SysOffice">
		select o.*, s.scount as scount, c.ccount as ccount from sys_office o
		left join (select school,count(*) as scount from student where del_flag = 0 group by school) s on o.id = s.school
		left join (select school,count(*) as ccount from classes where del_flag = 0 group by school) c on o.id = c.school
		where o.del_flag = 0
	</select> -->
	
	<select id="findListByDataScope" resultType="com.yunmel.frame.sys.model.SysOffice">
		select <include refid="sysOfficeColumns"/> , s.scount as scount, c.ccount as ccount
		from sys_office o
		left join (select school,count(*) as scount from student where del_flag = 0 group by school) s on o.id = s.school
		left join (select school,count(*) as ccount from classes where del_flag = 0 group by school) c on o.id = c.school
		<where>
			del_flag = 0
			<if test="scope != null and scope !='' ">
			and  ${scope}
			</if>
		</where>
	</select>
	<select id="findSchoolAll" resultType="com.yunmel.frame.sys.model.SysOffice">
		SELECT * from sys_office so where so.parent_id = 0 and so.del_flag = '0'
	</select>
	
	
	
	<!-- <select id="findOfficeByProject" resultType="com.yunmel.frame.sys.model.SysOffice">
		SELECT * from sys_office so,sys_unit_type t where t.id = so.type and so.del_flag = '0' and t.
	</select> -->
	
</mapper>
